---
import HeaderNavBar from "@/components/HeaderNavBar.astro";
import "@/styles/global.css";
import "@/styles/markdown.css";
import { ViewTransitions } from "astro:transitions";
interface Props {
  title: string;
}
const { title } = Astro.props;
---

<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style>
      article {
        width: 90%;
        max-width: 900px;
        margin: auto;
      }
    </style>
    <style is:global>
      h1#ç›®å½• {
        opacity: 0.5;
        font-size: 1.8rem;
        margin-bottom: 0;
      }
      h1#ç›®å½•::after {
        content: none;
      }
      h1#ç›®å½•::before {
        cursor: pointer;
        content: "ðŸž¡";
        margin-right: 0.2rem;
      }
      h1#ç›®å½•[data-active="true"]::before {
        content: "ðŸž¨";
      }
      h1#ç›®å½• + ul {
        height: 0;
        max-height: 0;
        overflow: hidden;
        transition: all .3s ease;
      }
      h1#ç›®å½•[data-active="true"] + ul {
        max-height: 999999999px;
        height: auto;
      }
    </style>
  </head>
  <body class="bg-gray-100 dark:bg-gray-900">
    <HeaderNavBar />
    <article class="page">
      <slot name="article" />
    </article>
    <script>
      window.onload = () => {
        const categoryH1Ele = document.querySelector("h1#ç›®å½•");
        if (categoryH1Ele) {
          categoryH1Ele.addEventListener("click", (e) => {
            const target = e.currentTarget;
            if (!target) {
              return;
            }
            if (target.dataset.active) {
              delete target.dataset.active;
            } else {
              target.dataset.active = true;
            }
          });
        }
      };
    </script>
  </body>
</html>
