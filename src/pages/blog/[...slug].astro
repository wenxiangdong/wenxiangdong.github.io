---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogLayout from "@/layouts/BlogLayout.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
interface Props {
  entry: CollectionEntry<"blog">;
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content, headings } = await entry.render();
const title = entry.data.title;
const tags = entry.data.tags;
---

<style>
  .title::after {
    content: none;
  }
</style>
<style is:global>
  h1#目录 {
    position: relative !important;
    opacity: 0.5;
    font-size: 1.2rem;
    margin-bottom: 0;
  }
  h1#目录::after {
    content: none;
  }
  h1#目录::before {
    cursor: pointer;
    content: "+";
    margin-right: 0.2rem;
    display: inline-block;
    transform: rotateZ(0);
    transition: transform 0.3s ease;
  }
  h1#目录[data-active="true"]::before {
    transform: rotateZ(135deg);
  }
  h1#目录 + ul {
    height: 0;
    max-height: 0;
    overflow: hidden;
    transition: all 0.3s ease;
  }
  h1#目录[data-active="true"] + ul {
    max-height: 999999999px;
    height: auto;
  }
</style>
<BlogLayout title={title}>
  <div class:list={["my-4", "text-5xl font-bold title", "title"]}>
    {title}
  </div>
  <div class="mb-2">
    {
      tags.map((tag) => (
        <span class="mx-2 border border-current py-1 px-2 rounded">{tag}</span>
      ))
    }
  </div>
  <Content />
  <script>
    window.onload = () => {
      const categoryH1Ele = document.querySelector("h1#目录");
      if (categoryH1Ele) {
        categoryH1Ele.addEventListener("click", (e) => {
          const target = e.currentTarget;
          if (!target) {
            return;
          }
          if (target.dataset.active) {
            delete target.dataset.active;
          } else {
            target.dataset.active = true;
          }
        });
      }
    };
  </script>
</BlogLayout>
